version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - RAILS_ENV=production
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=festival_planner_platform_production
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY_BASE_FILE=/run/secrets/secret_key_base
      - RAILS_MASTER_KEY_FILE=/run/secrets/rails_master_key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - app_storage:/rails/storage
      - app_log:/rails/log
    secrets:
      - postgres_password
      - secret_key_base
      - rails_master_key
    networks:
      - festival_planner_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/up"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - app_storage:/var/www/festival_planner_platform/storage:ro
    depends_on:
      - app
    networks:
      - festival_planner_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/up"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=festival_planner_platform_production
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./postgresql/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    secrets:
      - postgres_password
    networks:
      - festival_planner_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass "${REDIS_PASSWORD}" --appendonly yes
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - festival_planner_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Background job processing
  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    command: bundle exec sidekiq
    environment:
      - RAILS_ENV=production
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=festival_planner_platform_production
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY_BASE_FILE=/run/secrets/secret_key_base
      - RAILS_MASTER_KEY_FILE=/run/secrets/rails_master_key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - app_storage:/rails/storage
      - app_log:/rails/log
    secrets:
      - postgres_password
      - secret_key_base
      - rails_master_key
    networks:
      - festival_planner_network

  # Optional: Database backup service
  backup:
    image: postgres:16-alpine
    restart: "no"
    profiles:
      - backup
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=festival_planner_platform_production
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    volumes:
      - postgres_backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    secrets:
      - postgres_password
    networks:
      - festival_planner_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_storage:
    driver: local
  app_log:
    driver: local
  postgres_backups:
    driver: local

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  secret_key_base:
    file: ./secrets/secret_key_base.txt
  rails_master_key:
    file: ./secrets/rails_master_key.txt

networks:
  festival_planner_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16